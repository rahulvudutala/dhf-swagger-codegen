/*
 * QuickStart DataHub API
 * This is a sample of a QuickStart DataHub Swagger doucment defining endpoints to be mocked
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.marklogic.hub.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.marklogic.hub.client.model.CustomHook;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Step
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2019-02-22T15:51:23.383-08:00[America/Los_Angeles]")
public class Step {

  
  @JsonProperty("id")
  private String id = null;
  
  
  @JsonProperty("name")
  private String name = null;
  
  
  @JsonProperty("description")
  private String description = null;
  
  /**
   * Type of a step
   */
  public enum TypeEnum {
    
    INGESTION("ingestion"),
    MAPPING("mapping"),
    MASTERING("mastering"),
    CUSTOM("custom");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    
    @JsonValue
    
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    @JsonCreator
    
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    
  }
  
  
  @JsonProperty("type")
  private TypeEnum type = null;
  
  
  @JsonProperty("sourceDatabase")
  private String sourceDatabase = null;
  
  
  @JsonProperty("targetDatabase")
  private String targetDatabase = null;
  
  
  @JsonProperty("isValid")
  private Boolean isValid = null;
  
  
  @JsonProperty("isRunning")
  private Boolean isRunning = null;
  
  
  @JsonProperty("config")
  private Object config = null;
  
  
  @JsonProperty("language")
  private String language = null;
  
  
  @JsonProperty("version")
  private String version = null;
  
  
  @JsonProperty("customHook")
  private CustomHook customHook = null;
  
  public Step id(String id) {
    this.id = id;
    return this;
  }

  
  /**
  * Id of a step
  * @return id
  **/
  @ApiModelProperty(value = "Id of a step")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  
  public Step name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Name of a step
  * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of a step")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public Step description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * Description of a step
  * @return description
  **/
  @ApiModelProperty(value = "Description of a step")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public Step type(TypeEnum type) {
    this.type = type;
    return this;
  }

  
  /**
  * Type of a step
  * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of a step")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }
  
  public Step sourceDatabase(String sourceDatabase) {
    this.sourceDatabase = sourceDatabase;
    return this;
  }

  
  /**
  * Get sourceDatabase
  * @return sourceDatabase
  **/
  @ApiModelProperty(value = "")
  public String getSourceDatabase() {
    return sourceDatabase;
  }
  public void setSourceDatabase(String sourceDatabase) {
    this.sourceDatabase = sourceDatabase;
  }
  
  public Step targetDatabase(String targetDatabase) {
    this.targetDatabase = targetDatabase;
    return this;
  }

  
  /**
  * Get targetDatabase
  * @return targetDatabase
  **/
  @ApiModelProperty(value = "")
  public String getTargetDatabase() {
    return targetDatabase;
  }
  public void setTargetDatabase(String targetDatabase) {
    this.targetDatabase = targetDatabase;
  }
  
  public Step isValid(Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

  
  /**
  * Boolean flag to tell whether a Step is valid
  * @return isValid
  **/
  @ApiModelProperty(value = "Boolean flag to tell whether a Step is valid")
  public Boolean isIsValid() {
    return isValid;
  }
  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }
  
  public Step isRunning(Boolean isRunning) {
    this.isRunning = isRunning;
    return this;
  }

  
  /**
  * Boolean flag to tell whether a Step is running
  * @return isRunning
  **/
  @ApiModelProperty(value = "Boolean flag to tell whether a Step is running")
  public Boolean isIsRunning() {
    return isRunning;
  }
  public void setIsRunning(Boolean isRunning) {
    this.isRunning = isRunning;
  }
  
  public Step config(Object config) {
    this.config = config;
    return this;
  }

  
  /**
  * Get config
  * @return config
  **/
  @ApiModelProperty(value = "")
  public Object getConfig() {
    return config;
  }
  public void setConfig(Object config) {
    this.config = config;
  }
  
  public Step language(String language) {
    this.language = language;
    return this;
  }

  
  /**
  * Get language
  * @return language
  **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }
  
  public Step version(String version) {
    this.version = version;
    return this;
  }

  
  /**
  * Get version
  * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }
  
  public Step customHook(CustomHook customHook) {
    this.customHook = customHook;
    return this;
  }

  
  /**
  * Get customHook
  * @return customHook
  **/
  @ApiModelProperty(value = "")
  public CustomHook getCustomHook() {
    return customHook;
  }
  public void setCustomHook(CustomHook customHook) {
    this.customHook = customHook;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Step step = (Step) o;
    return Objects.equals(this.id, step.id) &&
        Objects.equals(this.name, step.name) &&
        Objects.equals(this.description, step.description) &&
        Objects.equals(this.type, step.type) &&
        Objects.equals(this.sourceDatabase, step.sourceDatabase) &&
        Objects.equals(this.targetDatabase, step.targetDatabase) &&
        Objects.equals(this.isValid, step.isValid) &&
        Objects.equals(this.isRunning, step.isRunning) &&
        Objects.equals(this.config, step.config) &&
        Objects.equals(this.language, step.language) &&
        Objects.equals(this.version, step.version) &&
        Objects.equals(this.customHook, step.customHook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, type, sourceDatabase, targetDatabase, isValid, isRunning, config, language, version, customHook);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Step {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sourceDatabase: ").append(toIndentedString(sourceDatabase)).append("\n");
    sb.append("    targetDatabase: ").append(toIndentedString(targetDatabase)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    isRunning: ").append(toIndentedString(isRunning)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    customHook: ").append(toIndentedString(customHook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



