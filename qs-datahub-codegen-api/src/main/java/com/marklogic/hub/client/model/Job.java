/*
 * QuickStart DataHub API
 * This is a sample of a QuickStart DataHub Swagger doucment defining endpoints to be mocked
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.marklogic.hub.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Job
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2019-02-22T15:51:23.383-08:00[America/Los_Angeles]")
public class Job {

  
  @JsonProperty("id")
  private String id = null;
  
  
  @JsonProperty("flowId")
  private String flowId = null;
  
  
  @JsonProperty("startTime")
  private OffsetDateTime startTime = null;
  
  
  @JsonProperty("endTime")
  private OffsetDateTime endTime = null;
  
  
  @JsonProperty("output")
  private List output = null;
  
  /**
   * Status of a job
   */
  public enum StatusEnum {
    
    RUNNING("running"),
    CANCELED("canceled"),
    FAILED("failed"),
    COMPLETED("completed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    
    @JsonValue
    
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    @JsonCreator
    
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    
  }
  
  
  @JsonProperty("status")
  private StatusEnum status = null;
  
  
  @JsonProperty("successfulEvents")
  private Long successfulEvents = null;
  
  
  @JsonProperty("failedEvents")
  private Long failedEvents = null;
  
  public Job id(String id) {
    this.id = id;
    return this;
  }

  
  /**
  * Id of the job
  * @return id
  **/
  @ApiModelProperty(required = true, value = "Id of the job")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  
  public Job flowId(String flowId) {
    this.flowId = flowId;
    return this;
  }

  
  /**
  * Id of the flow associated with this job
  * @return flowId
  **/
  @ApiModelProperty(required = true, value = "Id of the flow associated with this job")
  public String getFlowId() {
    return flowId;
  }
  public void setFlowId(String flowId) {
    this.flowId = flowId;
  }
  
  public Job startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  
  /**
  * Timestamp job started
  * @return startTime
  **/
  @ApiModelProperty(value = "Timestamp job started")
  public OffsetDateTime getStartTime() {
    return startTime;
  }
  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }
  
  public Job endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  
  /**
  * Timestamp job started
  * @return endTime
  **/
  @ApiModelProperty(value = "Timestamp job started")
  public OffsetDateTime getEndTime() {
    return endTime;
  }
  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }
  
  public Job output(List output) {
    this.output = output;
    return this;
  }

  
  /**
  * Array of strings relating to output (TODO)
  * @return output
  **/
  @ApiModelProperty(value = "Array of strings relating to output (TODO)")
  public List getOutput() {
    return output;
  }
  public void setOutput(List output) {
    this.output = output;
  }
  
  public Job status(StatusEnum status) {
    this.status = status;
    return this;
  }

  
  /**
  * Status of a job
  * @return status
  **/
  @ApiModelProperty(value = "Status of a job")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }
  
  public Job successfulEvents(Long successfulEvents) {
    this.successfulEvents = successfulEvents;
    return this;
  }

  
  /**
  * Get successfulEvents
  * minimum: 0
  * @return successfulEvents
  **/
  @ApiModelProperty(value = "")
  public Long getSuccessfulEvents() {
    return successfulEvents;
  }
  public void setSuccessfulEvents(Long successfulEvents) {
    this.successfulEvents = successfulEvents;
  }
  
  public Job failedEvents(Long failedEvents) {
    this.failedEvents = failedEvents;
    return this;
  }

  
  /**
  * Get failedEvents
  * minimum: 0
  * @return failedEvents
  **/
  @ApiModelProperty(value = "")
  public Long getFailedEvents() {
    return failedEvents;
  }
  public void setFailedEvents(Long failedEvents) {
    this.failedEvents = failedEvents;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.id, job.id) &&
        Objects.equals(this.flowId, job.flowId) &&
        Objects.equals(this.startTime, job.startTime) &&
        Objects.equals(this.endTime, job.endTime) &&
        Objects.equals(this.output, job.output) &&
        Objects.equals(this.status, job.status) &&
        Objects.equals(this.successfulEvents, job.successfulEvents) &&
        Objects.equals(this.failedEvents, job.failedEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, flowId, startTime, endTime, output, status, successfulEvents, failedEvents);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    successfulEvents: ").append(toIndentedString(successfulEvents)).append("\n");
    sb.append("    failedEvents: ").append(toIndentedString(failedEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



