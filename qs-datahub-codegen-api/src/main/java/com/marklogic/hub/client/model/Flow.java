/*
 * QuickStart DataHub API
 * This is a sample of a QuickStart DataHub Swagger doucment defining endpoints to be mocked
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.marklogic.hub.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Flow
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2019-02-22T15:51:23.383-08:00[America/Los_Angeles]")
public class Flow {

  
  @JsonProperty("id")
  private String id = null;
  
  
  @JsonProperty("name")
  private String name = null;
  
  
  @JsonProperty("description")
  private String description = null;
  
  
  @JsonProperty("batchSize")
  private Long batchSize = null;
  
  
  @JsonProperty("threadCount")
  private Long threadCount = null;
  
  
  @JsonProperty("options")
  private Object options = null;
  
  
  @JsonProperty("steps")
  private List<Step> steps = null;
  
  
  @JsonProperty("jobs")
  private List<Job> jobs = null;
  
  
  @JsonProperty("latestJob")
  private Object latestJob = null;
  
  
  @JsonProperty("isValid")
  private Boolean isValid = null;
  
  
  @JsonProperty("isRunning")
  private Boolean isRunning = null;
  
  
  @JsonProperty("version")
  private Long version = null;
  
  public Flow id(String id) {
    this.id = id;
    return this;
  }

  
  /**
  * Id of a flow
  * @return id
  **/
  @ApiModelProperty(value = "Id of a flow")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  
  public Flow name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Name of a flow
  * @return name
  **/
  @ApiModelProperty(value = "Name of a flow")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public Flow description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * Description of flow
  * @return description
  **/
  @ApiModelProperty(value = "Description of flow")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public Flow batchSize(Long batchSize) {
    this.batchSize = batchSize;
    return this;
  }

  
  /**
  * The # of documents to process in a single batch
  * minimum: 0
  * @return batchSize
  **/
  @ApiModelProperty(value = "The # of documents to process in a single batch")
  public Long getBatchSize() {
    return batchSize;
  }
  public void setBatchSize(Long batchSize) {
    this.batchSize = batchSize;
  }
  
  public Flow threadCount(Long threadCount) {
    this.threadCount = threadCount;
    return this;
  }

  
  /**
  * Get threadCount
  * minimum: 0
  * @return threadCount
  **/
  @ApiModelProperty(value = "")
  public Long getThreadCount() {
    return threadCount;
  }
  public void setThreadCount(Long threadCount) {
    this.threadCount = threadCount;
  }
  
  public Flow options(Object options) {
    this.options = options;
    return this;
  }

  
  /**
  * TBD: Likely metadata 
  * @return options
  **/
  @ApiModelProperty(value = "TBD: Likely metadata ")
  public Object getOptions() {
    return options;
  }
  public void setOptions(Object options) {
    this.options = options;
  }
  
  public Flow steps(List<Step> steps) {
    this.steps = steps;
    return this;
  }

  public Flow addStepsItem(Step stepsItem) {
    
    if (this.steps == null) {
      this.steps = new ArrayList<Step>();
    }
    
    this.steps.add(stepsItem);
    return this;
  }
  
  /**
  * Array of Step objects associated with this flow
  * @return steps
  **/
  @ApiModelProperty(value = "Array of Step objects associated with this flow")
  public List<Step> getSteps() {
    return steps;
  }
  public void setSteps(List<Step> steps) {
    this.steps = steps;
  }
  
  public Flow jobs(List<Job> jobs) {
    this.jobs = jobs;
    return this;
  }

  public Flow addJobsItem(Job jobsItem) {
    
    if (this.jobs == null) {
      this.jobs = new ArrayList<Job>();
    }
    
    this.jobs.add(jobsItem);
    return this;
  }
  
  /**
  * Array of Job IDs generated by this flow
  * @return jobs
  **/
  @ApiModelProperty(value = "Array of Job IDs generated by this flow")
  public List<Job> getJobs() {
    return jobs;
  }
  public void setJobs(List<Job> jobs) {
    this.jobs = jobs;
  }
  
  public Flow latestJob(Object latestJob) {
    this.latestJob = latestJob;
    return this;
  }

  
  /**
  * Data related to the last job run for this Flow
  * @return latestJob
  **/
  @ApiModelProperty(value = "Data related to the last job run for this Flow")
  public Object getLatestJob() {
    return latestJob;
  }
  public void setLatestJob(Object latestJob) {
    this.latestJob = latestJob;
  }
  
  public Flow isValid(Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

  
  /**
  * Boolean flag used for UI to tell whether all Steps associated with this Flow are valid, making the Flow valid
  * @return isValid
  **/
  @ApiModelProperty(value = "Boolean flag used for UI to tell whether all Steps associated with this Flow are valid, making the Flow valid")
  public Boolean isIsValid() {
    return isValid;
  }
  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }
  
  public Flow isRunning(Boolean isRunning) {
    this.isRunning = isRunning;
    return this;
  }

  
  /**
  * (shouldn&#x27;t this be on the job level? Flows don&#x27;t run)
  * @return isRunning
  **/
  @ApiModelProperty(value = "(shouldn't this be on the job level? Flows don't run)")
  public Boolean isIsRunning() {
    return isRunning;
  }
  public void setIsRunning(Boolean isRunning) {
    this.isRunning = isRunning;
  }
  
  public Flow version(Long version) {
    this.version = version;
    return this;
  }

  
  /**
  * (Is this valid?)
  * minimum: 0
  * @return version
  **/
  @ApiModelProperty(value = "(Is this valid?)")
  public Long getVersion() {
    return version;
  }
  public void setVersion(Long version) {
    this.version = version;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flow flow = (Flow) o;
    return Objects.equals(this.id, flow.id) &&
        Objects.equals(this.name, flow.name) &&
        Objects.equals(this.description, flow.description) &&
        Objects.equals(this.batchSize, flow.batchSize) &&
        Objects.equals(this.threadCount, flow.threadCount) &&
        Objects.equals(this.options, flow.options) &&
        Objects.equals(this.steps, flow.steps) &&
        Objects.equals(this.jobs, flow.jobs) &&
        Objects.equals(this.latestJob, flow.latestJob) &&
        Objects.equals(this.isValid, flow.isValid) &&
        Objects.equals(this.isRunning, flow.isRunning) &&
        Objects.equals(this.version, flow.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, batchSize, threadCount, options, steps, jobs, latestJob, isValid, isRunning, version);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flow {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    batchSize: ").append(toIndentedString(batchSize)).append("\n");
    sb.append("    threadCount: ").append(toIndentedString(threadCount)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    latestJob: ").append(toIndentedString(latestJob)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    isRunning: ").append(toIndentedString(isRunning)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



